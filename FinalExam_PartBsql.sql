--Yulia Flenova N01342767 
--QUESTION1 
CREATE OR REPLACE PROCEDURE UPDATE_STREET (P_LOCATION_ID IN NUMBER, P_NEW_STREETADRESS VARCHAR) IS
    V_OLD_STREETNAME LOCATIONS.STREET_ADDRESS%TYPE;
BEGIN
    SELECT STREET_ADDRESS
    INTO V_OLD_STREETNAME
    FROM LOCATIONS
    WHERE LOCATION_ID = P_LOCATION_ID;
    
    DBMS_OUTPUT.PUT_LINE('OLD STREET NAME: ' || V_OLD_STREETNAME);
    DBMS_OUTPUT.PUT_LINE('NEW STREET NAME: ' || P_NEW_STREETADRESS);
    
    UPDATE LOCATIONS 
    SET STREET_ADDRESS = P_NEW_STREETADRESS;
END;

DECLARE
  V_LOCATION_ID NUMBER := 1400; 
BEGIN
  UPDATE_STREET(V_LOCATION_ID, 'TEST5');
END;

-- QUESTION 2
CREATE TABLE DEPARTMENT_AUDIT 
    (DEPARTMENT_ID NUMBER,      
    OLD_DEPARTMENT_NAME VARCHAR2(100),    
    NEW_DEPARTMENT_NAME VARCHAR2(100)); 
    
CREATE OR REPLACE TRIGGER DEPARTMENT_AUDIT_TRIGGER
AFTER UPDATE ON DEPARTMENTS FOR EACH ROW
BEGIN

END;

UPDATE DEPARTMENTS 
SET DEPARTMENT_NAME = 'FINAL_EXAM_STUDENTN01342767'
WHERE DEPARTMENT_NAME LIKE 'A%';

SELECT * FROM DEPARTMENT_AUDIT;

-- QUESTION 3
CREATE OR REPLACE PROCEDURE UPDATE_DEPARTMENT (P_DEPARTMENT_ID NUMBER, P_NEW_DEPT_NAME VARCHAR) IS
    V_STMT VARCHAR2(200);
BEGIN
    V_STMT := 'UPDATE DEPARTMENT_NAME := '|| P_NEW_DEPT_NAME ||' FROM DEPARTMENTS WHERE DEPARTMENT_ID = ' || P_DEPARTMENT_ID;
    EXECUTE IMMEDIATE V_STMT INTO P_DEPARTMENT_ID;
EXCEPTION   
    WHEN NO_DATA_FOUND THEN 
    DBMS_OUTPUT.PUT_LINE('NO DATA FOUND');
END;

DECLARE
    V_DEPT_ID NUMBER(3);
BEGIN
    UPDATE_DEPARTMENT(60,'HELLO');
    DBMS_OUTPUT.PUT_LINE(V_DEPT_ID);
END;

--QUESTION4
CREATE OR REPLACE PACKAGE FINAL_EXAM_STUDENT01342767 AS 
    FUNCTION  FIND_NAME (P_DEPARTMENT_ID IN NUMBER) RETURN VARCHAR;
    --FUNCTION FIND_MANAGER_NAME (EMPLOYEE_ID IN NUMBER) RETURN VARCHAR;
END FINAL_EXAM_STUDENT01342767;
CREATE OR REPLACE PACKAGE BODY FINAL_EXAM_STUDENT01342767 AS
    FUNCTION FIND_NAME(P_DEPARTMENT_ID IN NUMBER)
        RETURN VARCHAR IS V_DEPARTMENT_NAME VARCHAR(100);
        BEGIN 
            SELECT DEPARTMENT_NAME INTO V_DEPARTMENT_NAME FROM DEPARTMENTS WHERE DEPARTMENT_ID=P_DEPARTMENT_ID;
            RETURN V_DEPARTMENT_NAME;
        END;
    --FUNCTION FIND_MANAGER_NAME(P_EMPLOYEE_ID IN NUMBER)
        --RETURN VARCHAR IS V_MANAGER_NAME VARCHAR(100);
       -- BEGIN 
            --SELECT FIRST_NAME INTO V_MANAGER_NAME FROM EMPLOYEES WHERE EMPLOYEE_ID=P_EMPLOYEE_ID;
            --RETURN V_MANAGER_NAME;
        --END;
END FINAL_EXAM_STUDENT01342767;
DECLARE
    DEPARTMENT_NAME VARCHAR(100);
   --FIRST_NAME VARCHAR(100);
BEGIN
    DEPARTMENT_NAME := FINAL_EXAM_STUDENT01342767.FIND_NAME(60);
    DBMS_OUTPUT.PUT_LINE(DEPARTMENT_NAME);
    --FIRST_NAME := FINAL_EXAM_STUDENT01342767.FIND_MANAGER_NAME(100);
    --DBMS_OUTPUT.PUT_LINE(FIRST_NAME);
END;




